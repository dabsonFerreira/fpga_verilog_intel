// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "01/03/2022 19:25:08"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          TOP
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module TOP_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
reg clr_n;
reg [3:0] inA;
reg [3:0] inB;
reg [3:0] inC;
reg [3:0] inD;
reg ldA;
reg ldB;
reg ldC;
reg ldD;
reg transmit;
// wires                                               
wire [1:0] QbitRX;
wire [1:0] QwrdRX;
wire data;
wire [3:0] outA;
wire [3:0] outB;
wire [3:0] outC;
wire [3:0] outD;
wire received_n;
wire sent_n;

// assign statements (if any)                          
TOP i1 (
// port map - connection between master ports and signals/registers   
	.QbitRX(QbitRX),
	.QwrdRX(QwrdRX),
	.clk(clk),
	.clr_n(clr_n),
	.data(data),
	.inA(inA),
	.inB(inB),
	.inC(inC),
	.inD(inD),
	.ldA(ldA),
	.ldB(ldB),
	.ldC(ldC),
	.ldD(ldD),
	.outA(outA),
	.outB(outB),
	.outC(outC),
	.outD(outD),
	.received_n(received_n),
	.sent_n(sent_n),
	.transmit(transmit)
);
initial 
begin 
#1000000 $finish;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #10000 1'b1;
	#10000;
end 

// clr_n
initial
begin
	clr_n = 1'b0;
	clr_n = #40000 1'b1;
end 

// transmit
initial
begin
	transmit = 1'b0;
	transmit = #140000 1'b1;
	transmit = #20000 1'b0;
end 
endmodule

